{"ast":null,"code":"const initialState = {\n  cart: [] // Ensure cart is an array\n};\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      // Check if the item is already in the cart\n      const existingItemIndex = state.cart.findIndex(item => item.id === action.payload.id);\n      if (existingItemIndex >= 0) {\n        // If it is, increment the quantity\n        const newCart = [...state.cart];\n        newCart[existingItemIndex].quantity += 1;\n        return {\n          ...state,\n          cart: newCart\n        };\n      } else {\n        // Otherwise, add the new item to the cart\n        return {\n          ...state,\n          cart: [...state.cart, {\n            ...action.payload,\n            quantity: 1\n          }]\n        };\n      }\n    case 'REMOVE_FROM_CART':\n      return {\n        ...state,\n        cart: state.cart.filter(item => item.id !== action.payload.id)\n      };\n    case 'INCREMENT_ITEM':\n      return {\n        ...state,\n        cart: state.cart.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item)\n      };\n    case 'DECREMENT_ITEM':\n      return {\n        ...state,\n        cart: state.cart.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: item.quantity - 1\n        } : item).filter(item => item.quantity > 0) // Remove item if quantity is 0\n      };\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["initialState","cart","cartReducer","state","action","type","existingItemIndex","findIndex","item","id","payload","newCart","quantity","filter","map"],"sources":["C:/Users/Player/Documents/GitHub/web-development-projects/React/paradise-nursery/src/redux/cartReducer.js"],"sourcesContent":["const initialState = {\r\n  cart: []  // Ensure cart is an array\r\n};\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      // Check if the item is already in the cart\r\n      const existingItemIndex = state.cart.findIndex(item => item.id === action.payload.id);\r\n      if (existingItemIndex >= 0) {\r\n        // If it is, increment the quantity\r\n        const newCart = [...state.cart];\r\n        newCart[existingItemIndex].quantity += 1;\r\n        return {\r\n          ...state,\r\n          cart: newCart\r\n        };\r\n      } else {\r\n        // Otherwise, add the new item to the cart\r\n        return {\r\n          ...state,\r\n          cart: [...state.cart, { ...action.payload, quantity: 1 }]\r\n        };\r\n      }\r\n    case 'REMOVE_FROM_CART':\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter(item => item.id !== action.payload.id)\r\n      };\r\n    case 'INCREMENT_ITEM':\r\n      return {\r\n        ...state,\r\n        cart: state.cart.map(item =>\r\n          item.id === action.payload.id ? { ...item, quantity: item.quantity + 1 } : item\r\n        )\r\n      };\r\n    case 'DECREMENT_ITEM':\r\n      return {\r\n        ...state,\r\n        cart: state.cart.map(item =>\r\n          item.id === action.payload.id ? { ...item, quantity: item.quantity - 1 } : item\r\n        ).filter(item => item.quantity > 0) // Remove item if quantity is 0\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE,CAAE;AACZ,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB;MACA,MAAMC,iBAAiB,GAAGH,KAAK,CAACF,IAAI,CAACM,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC;MACrF,IAAIH,iBAAiB,IAAI,CAAC,EAAE;QAC1B;QACA,MAAMK,OAAO,GAAG,CAAC,GAAGR,KAAK,CAACF,IAAI,CAAC;QAC/BU,OAAO,CAACL,iBAAiB,CAAC,CAACM,QAAQ,IAAI,CAAC;QACxC,OAAO;UACL,GAAGT,KAAK;UACRF,IAAI,EAAEU;QACR,CAAC;MACH,CAAC,MAAM;QACL;QACA,OAAO;UACL,GAAGR,KAAK;UACRF,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAI,EAAE;YAAE,GAAGG,MAAM,CAACM,OAAO;YAAEE,QAAQ,EAAE;UAAE,CAAC;QAC1D,CAAC;MACH;IACF,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGT,KAAK;QACRF,IAAI,EAAEE,KAAK,CAACF,IAAI,CAACY,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE;MAC/D,CAAC;IACH,KAAK,gBAAgB;MACnB,OAAO;QACL,GAAGN,KAAK;QACRF,IAAI,EAAEE,KAAK,CAACF,IAAI,CAACa,GAAG,CAACN,IAAI,IACvBA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,GAAG;UAAE,GAAGD,IAAI;UAAEI,QAAQ,EAAEJ,IAAI,CAACI,QAAQ,GAAG;QAAE,CAAC,GAAGJ,IAC7E;MACF,CAAC;IACH,KAAK,gBAAgB;MACnB,OAAO;QACL,GAAGL,KAAK;QACRF,IAAI,EAAEE,KAAK,CAACF,IAAI,CAACa,GAAG,CAACN,IAAI,IACvBA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,GAAG;UAAE,GAAGD,IAAI;UAAEI,QAAQ,EAAEJ,IAAI,CAACI,QAAQ,GAAG;QAAE,CAAC,GAAGJ,IAC7E,CAAC,CAACK,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACI,QAAQ,GAAG,CAAC,CAAC,CAAC;MACtC,CAAC;IACH;MACE,OAAOT,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}